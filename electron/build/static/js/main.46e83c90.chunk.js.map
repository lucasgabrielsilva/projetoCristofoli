{"version":3,"sources":["assets/cristofoli.png","pages/login/styles.js","pages/login/index.js","components/menuBar/styles.js","components/menuBar/index.js","components/card/styles.js","components/card/index.js","components/statesBar/styles.js","components/statesBar/index.js","pages/monitor/styles.js","configs/index.js","pages/monitor/index.js","components/graphic/styles.js","components/graphic/index.js","pages/teste1/styles.js","pages/teste1/index.js","components/graphicCompare/styles.js","components/graphicCompare/index.js","pages/compare/styles.js","pages/compare/index.js","index.js"],"names":["Container","styled","div","DivLogin","DivOptions","Image","img","Select","select","Button","button","DivPort","ButtonRefresh","Login","useState","port","setPort","listPorts","setListPorts","portsSignal","setPortsSignal","error","setError","redirect","setRedirect","handleConnect","data","handleUpdateListPort","setTimeout","handleTryConnect","event","a","preventDefault","window","api","send","useEffect","receive","src","Logo","alt","style","backgroundColor","value","onChange","target","map","portName","title","onClick","size","color","to","DivExit","DivImg","Title","label","Item","ButtonExit","MenuBar","props","goTo","setGoTo","handleChangeWindow","stop","handleTryChangeWindow","changeWindow","index","location","href","indexOf","substring","length","DivTitle","DivCanvas","DivInfo","canvasConfigBase","minorTicks","tickSide","numberSide","fontNumbersSize","borderShadowWidth","ticksWidth","ticksWidthMinor","colorPlate","borders","strokeStick","needleType","needleWidth","colorNeedle","colorNeedleEnd","needleSide","animationDuration","animationRule","barBeginCircle","barWidth","Card","refCanvas","useRef","current","options","renderTo","minValue","maxValue","majorTicks","highlights","LinearGauge","draw","temp","width","height","update","resize","destroy","tyle","ref","unit","Status","opa","ItemText","h5","StatesBar","categories","categorie","name","option","opacity","DivCards","configStatesBar","Monitor","setResize","vase","resistence","tension","pressure","setData","onresize","handleDataA","from","ConfigStatesBar","Canvas","canvas","Graphic","Chart","getContext","type","labels","datasets","display","text","fontSize","fontColor","plugins","zoom","enabled","mode","drag","borderColor","borderWidth","rangeMin","x","y","rangeMax","pan","animation","duration","elements","line","point","radius","responsiveAnimationDuration","maintainAspectRatio","responsive","legend","tooltips","scales","yAxes","ticks","max","min","gridLines","xAxes","chart","push","forEach","dataset","parseInt","split","document","getElementById","scrollLeft","reset","clean","e","console","log","id","DivTest","Header","ButtonBar","Main","DivGraph","DivResult","TextArea","textarea","dataToCsv","result","Teste1","start","statusButton","setStatusButton","textAreaValue","setTextAreaValue","isRunning","setIsRunning","setClean","handleDataB","presurization","sterilization","depresurization","drying","coulding","total","handleStop","handleDataC","concat","disabled","fill","showLine","GraphicCompare","scaleLabel","labelString","i","data1","setData1","data2","setData2","show","setShow","setType","textArea1","setTextArea1","textArea2","setTextArea2","handleLoad1","handleLoad2","avgRe","maxRe","maxVa","avgVa","maxPe","avgPe","maxTe","avgTe","tempPre","tempEst","tempDes","tempSec","tempRes","tempTot","onload","ReactDOM","render","basename","path","component","exact","Compare"],"mappings":"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","file":"static/js/main.46e83c90.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cristofoli.6e6e3c77.png\";","import styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: center;\n    align-items: center;\n    background-color: #fafafa;\n`;\n\nconst DivLogin = styled.div`\n    height: 70%;\n    width: 35%;\n    display: flex;\n    flex-flow: column wrap;\n    justify-content: space-around;\n    align-items: center;\n    background-color: white;\n    border: 2px solid #214f62;\n    border-radius: 20%;\n`;\n\nconst DivOptions = styled.div`\n    height: 20%;\n    width: 100%;\n    background-color: inherit;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-around;\n    align-items: center;\n`;\n\nconst Image = styled.img`\n    height: 28vh;\n    width: 28vw;\n    background-color: inherit;\n`;\n\nconst Select = styled.select`\n    color: #214f62;\n    border: 2px solid #214f62;\n    background-color: inherit;\n    border-radius: 20%;\n    cursor: pointer;\n`;\n\nconst Button = styled.button`\n    padding: 2%;\n    border: 2px solid #214f62;\n    border-radius: 20%;\n    color: #214f62;\n    background-color: white;\n    cursor: pointer;\n    &:hover{\n        background-color: #214f62;\n        color: white;\n    }\n`;\n\nconst DivPort = styled.div`\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n    align-items: center;\n    background-color: inherit;\n`;\n\nconst ButtonRefresh = styled.button`\n    max-height: 30%;\n    max-width: 35%;\n    padding: 1%;\n    border: 2px solid #214f62;\n    border-radius: 20%;\n    color: white;\n    background-color: #214f62;\n    cursor: pointer;\n    &:hover{\n        background-color: white;\n        color: #214f62;\n    }\n`;\n\nexport {Container, DivLogin, DivOptions, DivPort, ButtonRefresh, Image, Select, Button};","import React, { useEffect, useState } from 'react';\nimport { FiRefreshCcw } from 'react-icons/fi';\nimport { Redirect } from 'react-router-dom';\nimport Logo from '../../assets/cristofoli.png';\n\nimport {\n    Container,\n    DivLogin,\n    DivOptions,\n    DivPort,\n    ButtonRefresh,\n    Image,\n    Select,\n    Button,\n} from './styles';\n\nfunction Login() {\n    const [port, setPort] = useState('');\n    const [listPorts, setListPorts] = useState([]);\n    const [portsSignal, setPortsSignal] = useState(false);\n    const [error, setError] = useState(false);\n    const [redirect, setRedirect] = useState(false);\n\n    const handleConnect = (data) => {\n        if (data) {\n            setRedirect(true);\n        } else {\n            setError(true);\n        }\n    };\n\n    const handlePort = (event) => {\n        event.preventDefault();\n        setPort(event.target.value);\n        setError(false);\n    };\n\n    const handleUpdatePorts = (event) => {\n        event.preventDefault();\n        window.api.send('listPorts');\n    };\n\n    const handleUpdateListPort = (data) => {\n        setListPorts(data);\n        setPort(`${data[0]}`);\n        setPortsSignal(true);\n        setTimeout(() => {\n            setPortsSignal(false);\n        }, 1500);\n    };\n\n    const handleTryConnect = async (event) => {\n        event.preventDefault();\n        window.api.send('portConnect', port);\n    };\n\n    useEffect(() => {\n        window.api.receive('connectionPort', handleConnect);\n        window.api.receive('listPort', handleUpdateListPort);\n        window.api.send('listPorts');\n    }, []);\n\n    return (\n        <Container>\n            <DivLogin>\n                <Image src={Logo} alt=\"logo da cristofoli\" />\n                <DivOptions>\n                    <label style={{ backgroundColor: 'inherit' }}>\n                        modelo:\n                        <Select value=\"VDR 3.00\">\n                            <option value=\"VDR 3.00\"> VDR 3.00 </option>\n                            <option value=\"Modelo 2\"> Modelo 2 </option>\n                            <option value=\"Modelo 3\"> Modelo 3 </option>\n                            <option value=\"Modelo 4\"> Modelo 4 </option>\n                        </Select>\n                    </label>\n                    <DivPort>\n                        <label style={{ backgroundColor: 'inherit' }}>\n                            porta:\n                            <Select value={port} onChange={handlePort}>\n                                {listPorts.map((portName) => {\n                                    return (\n                                        <option value={`${portName}`}>\n                                            {' '}\n                                            {portName}{' '}\n                                        </option>\n                                    );\n                                })}\n                            </Select>\n                        </label>\n                        <ButtonRefresh\n                            title=\"Atulizar lista das portas COM\"\n                            onClick={handleUpdatePorts}\n                        >\n                            <FiRefreshCcw\n                                size={20}\n                                style={{ backgroundColor: 'inherit' }}\n                            />\n                        </ButtonRefresh>\n                    </DivPort>\n                </DivOptions>\n                {portsSignal ? (\n                    <label\n                        style={{ color: '#214f62', backgroundColor: 'inherit' }}\n                    >\n                        Portas COM atualizadas\n                    </label>\n                ) : null}\n                {error ? (\n                    <label style={{ color: 'red', backgroundColor: 'inherit' }}>\n                        Erro na conexão com a porta COM\n                    </label>\n                ) : null}\n                <Button onClick={handleTryConnect}> Conectar </Button>\n                {redirect ? <Redirect to=\"/monitor\" /> : null}\n            </DivLogin>\n        </Container>\n    );\n}\n\nexport default Login;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 120px;\n    display: flex;\n    flex-flow: column wrap;\n    align-items: center;\n    justify-content: space-between;\n    border-right: 2px solid gray;\n    background-color: #fafafa;\n`;\n\nconst DivOptions = styled.div`\n    max-height: 80%;\n    width: 100%;\n    display: flex;\n    flex-flow: column nowrap;\n    align-items: center;\n    justify-content: center;\n    background-color: inherit;\n`;\n\nconst DivExit = styled.div`\n    height: 5%;\n    width: 100%;\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: center;\n    justify-content: center;\n    background-color: #fafafa;\n`;\n\nconst DivImg = styled.div`\n    height: 35%;\n    width: 100%;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n`;\n\nconst Image = styled.img`\n    height: 90;\n    width: 80%;\n    background-color: white;\n`;\n\nconst Title = styled.label`\n    padding-top: 5%;\n    padding-bottom: 5%;\n    width: 100%;\n    border-bottom: 1px solid gray;\n    font-size: 90%;\n    font-style: italic;\n    color: white;\n    background-color: #214f62;\n    align-self: auto;\n`;\n\nconst Item = styled.button`\n    height: 15%;\n    width: 100%;\n    background-color: white;\n    color: black;\n    border: none;\n    border-bottom: 1px solid darkgray;\n    font-size: 100%;\n    cursor: pointer;\n    &:hover{\n        background-color: #214f62;\n        color: white;\n    };\n`;\n\nconst ButtonExit = styled.button`\n    height: 100%;\n    width: 100%;\n    background-color: #214f62;\n    color: white;\n    border: none;\n    border-bottom: 1px solid darkgray;\n    border-top: 1px solid darkgray;\n    text-decoration: none;\n    text-align: center;\n    cursor: pointer;\n    &:hover{\n        background-color: white;\n        color: #214f62;\n    };\n`;\n\nexport {Container, Image, DivImg, DivOptions, DivExit, Title, Item, ButtonExit};","import React, { useState, useEffect } from 'react';\nimport { BiExit } from 'react-icons/bi';\nimport { Redirect } from 'react-router-dom';\nimport Logo from '../../assets/cristofoli.png';\nimport {\n    Container,\n    DivOptions,\n    DivImg,\n    DivExit,\n    Image,\n    Title,\n    Item,\n    ButtonExit,\n} from './styles.js';\n\nfunction MenuBar(props) {\n    const [redirect, setRedirect] = useState(false);\n    const [goTo, setGoTo] = useState('#');\n\n    const handleChangeWindow = (data) => {\n        if (data) {\n            window.api.stop('A');\n            window.api.stop('B');\n            window.api.stop('changeWindow');\n            window.api.stop('listPort');\n            window.api.stop('connectionPort');\n            setRedirect(true);\n        } else {\n            setGoTo('#');\n        }\n    };\n\n    useEffect(() => {\n        window.api.receive('changeWindow', handleChangeWindow);\n    }, []);\n\n    const handleTryChangeWindow = (data) => {\n        if (props.changeWindow) {\n            const index = window.location.href.indexOf('#/');\n            if (\n                window.location.href.substring(\n                    index + 1,\n                    window.location.href.length,\n                ) !== data\n            ) {\n                setGoTo(data);\n                window.api.send('openModal', data);\n            }\n        } else if (data === '/') {\n            setGoTo(data);\n            window.api.send('Exit');\n        } else {\n            setGoTo(data);\n            setRedirect(true);\n        }\n    };\n\n    return (\n        <Container>\n            <DivOptions>\n                <DivImg>\n                    <Image src={Logo} alt=\"logo da cristofoli\" />\n                </DivImg>\n                <Title>Monitorar</Title>\n                <Item onClick={() => handleTryChangeWindow('/monitor')}>\n                    {' '}\n                    Status{' '}\n                </Item>\n                <Title>Testes</Title>\n                <Item onClick={() => handleTryChangeWindow('/compare')}>\n                    {' '}\n                    Comparar{' '}\n                </Item>\n                <Item onClick={() => handleTryChangeWindow('/teste1')}>\n                    {' '}\n                    Teste 1{' '}\n                </Item>\n            </DivOptions>\n            <DivExit>\n                <ButtonExit\n                    title=\"Sair\"\n                    onClick={() => handleTryChangeWindow('/')}\n                >\n                    <BiExit size={24} style={{ backgroundColor: 'inherit' }} />\n                </ButtonExit>\n            </DivExit>\n            {redirect ? <Redirect to={goTo} /> : null}\n        </Container>\n    );\n}\n\nexport default MenuBar;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 25%;\n    width: 50%;\n    background-color: #fafafa;\n    display: flex;\n    flex-flow: column wrap;\n    justify-content: space-around;\n    align-items: center;\n    border: 2px solid gray;\n\n    @media(max-width: 800px){\n        width: 100%;\n    }\n`;\n\nconst DivTitle = styled.div`\n    height: 15%;\n    align-self: auto;\n    display: flex;\n    background-color: #214f62;\n    flex-flow: row nowrap;\n`;\n\nconst DivCanvas = styled.div`\n    align-self: auto;\n    height: 65%;\n    width: 95%;\n`;\n\nconst DivInfo = styled.div`\n    height: 15%;\n    align-self: auto;\n    display: flex;\n    flex-flow: row nowrap;\n`;\n\nexport {Container, DivTitle, DivCanvas, DivInfo};","import React, { useRef, useEffect } from 'react'\nimport { LinearGauge } from 'canvas-gauges'\nimport {Container, DivCanvas, DivTitle, DivInfo} from './styles';\n\nlet canvasConfigBase = {\n  \n  minorTicks: 5,\n  tickSide: \"left\",\n  numberSide: \"left\",\n  fontNumbersSize: 30,\n  borderShadowWidth: 0,\n  ticksWidth: 25,\n  ticksWidthMinor: 15,\n  colorPlate: \"#fafafa\",\n  borders: false,\n  strokeStick: false,\n  needleType: \"arrow\",\n  needleWidth: 7,\n  colorNeedle: \"#214f62\",\n  colorNeedleEnd: false,\n  needleSide: \"left\",\n  animationDuration: 10,\n  animationRule: \"linear\",\n  barBeginCircle: false,\n  barWidth: 0\n};\n\nexport default function Card(props){\n\n  let refCanvas = useRef(null);\n\n  useEffect(() => {\n    if(refCanvas.current){\n      if(!refCanvas.current.options){\n      canvasConfigBase.renderTo = refCanvas.current;\n      canvasConfigBase.minValue = props.minValue;\n      canvasConfigBase.maxValue = props.maxValue;\n      canvasConfigBase.majorTicks = props.majorTicks;\n      canvasConfigBase.highlights = props.highlights;\n      canvasConfigBase.value = props.value;\n      refCanvas.current = new LinearGauge(canvasConfigBase).draw();\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if(refCanvas.current){\n      const temp = new LinearGauge(canvasConfigBase);\n      refCanvas.current.options.width = temp.options.width;\n      refCanvas.current.options.height = temp.options.height;\n      refCanvas.current.update(refCanvas);\n    }\n  },[props.resize]);\n\n  useEffect(() => {\n    if(refCanvas.current){\n      refCanvas.current.value = props.value;\n      refCanvas.current.update(refCanvas);\n    }\n  },[props.value]);\n\n  useEffect(() => {\n    return () => refCanvas.current.destroy();\n  },[])\n\n  \n  return (\n    <Container>\n      <DivTitle>\n        <label tyle={{\"fontSize\": \"18px\", \"fontWeight\": \"bold\"}}>{props.title}</label>\n      </DivTitle>\n      <DivCanvas>\n        <canvas ref={refCanvas}></canvas>\n      </DivCanvas>\n      <DivInfo>\n        <label style={{\"fontSize\": \"20px\", \"fontWeight\": \"bold\"}}>{`${props.value}${props.unit}`}</label>\n      </DivInfo>\n    </Container>\n  );\n}","import styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100%;\n    width: 15%;\n    display: flex;\n    flex-flow: column wrap;\n    justify-content: space-between;\n    background-color: #fafafa;\n\n    @media(max-width: 800px){\n        width: 20%;\n    }\n\n`;\n\nconst Status = styled.label`\n    height: 2vh;\n    width: 1vw;\n    border-radius: 100%;\n    background-color: green;\n    opacity: ${props => props.opa};\n    margin-right: 3%;\n`;\n\nconst Item = styled.div`\n    height: 3%;\n    align-self: auto;\n    display: flex;\n    flex-flow: row nowrap;\n    border-bottom: 1px solid gray;\n    justify-content: flex-start;\n    align-content: center;\n    background-color: inherit;\n`;\n\nconst ItemText = styled.label`\n    font-size: 85%;\n    background-color: inherit;\n`;\n\nconst Title = styled.h5`\n    background-color: inherit;\n`;\n\nexport {Container, Item, ItemText, Title, Status};","import React from 'react';\nimport { Container, Item, ItemText, Title, Status } from './styles';\n\nfunction StatesBar(props) {\n    return (\n        <Container>\n            {props.categories.map((categorie) => {\n                return (\n                    <>\n                        <Item key={categorie.name}>\n                            <Title>{categorie.name}</Title>\n                        </Item>\n                        {categorie.options.map((option) => {\n                            return (\n                                <Item key={option.name}>\n                                    <Status opa={option.opacity} />\n                                    <ItemText>{option.name}</ItemText>\n                                </Item>\n                            );\n                        })}\n                    </>\n                );\n            })}\n        </Container>\n    );\n}\n\nexport default StatesBar;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    flex-flow: column wrap;\n    justify-content: flex-start;\n    align-content: flex-start;\n`;\n\nconst DivCards = styled.div`\n    height: 100%;\n    width: 75%;\n    background-color: gray;\n    align-self: auto;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: flex-start;\n    align-content: flex-start;\n\n    @media (max-width: 800px) {\n        flex-flow: column nowrap;\n        justify-content: flex-start;\n        width: 70%;\n    }\n`;\n\nexport { Container, DivCards };\n","const configStatesBar = [\n    {\n        name: 'Acionamentos',\n        options: [\n            {\n                opacity: 0.3,\n                name: 'Bomba de Vácuo',\n            },\n            {\n                opacity: 0.3,\n                name: 'Bomba de Água',\n            },\n            {\n                opacity: 0.3,\n                name: 'Coolers',\n            },\n            {\n                opacity: 0.3,\n                name: 'Abre Porta',\n            },\n            {\n                opacity: 0.3,\n                name: 'Fecha Porta',\n            },\n            {\n                opacity: 0.3,\n                name: 'RES Superior',\n            },\n            {\n                opacity: 0.3,\n                name: 'RES Inferior',\n            },\n        ],\n    },\n    {\n        name: 'Entradas Digitais',\n        options: [\n            {\n                opacity: 0.3,\n                name: 'Inicio',\n            },\n            {\n                opacity: 0.3,\n                name: 'Direita',\n            },\n            {\n                opacity: 0.3,\n                name: 'Esquerda',\n            },\n            {\n                opacity: 0.3,\n                name: 'Cancela',\n            },\n            {\n                opacity: 0.3,\n                name: 'Trava Aberta',\n            },\n            {\n                opacity: 0.3,\n                name: 'Trava Fechada',\n            },\n            {\n                opacity: 0.3,\n                name: 'Porta Fechada',\n            },\n            {\n                opacity: 0.3,\n                name: 'Enter',\n            },\n        ],\n    },\n    {\n        name: 'Válvulas',\n        options: [\n            {\n                opacity: 0.3,\n                name: 'Radiador',\n            },\n            {\n                opacity: 0.3,\n                name: 'Despressurização',\n            },\n            {\n                opacity: 0.3,\n                name: 'Saida de Vapor',\n            },\n            {\n                opacity: 0.3,\n                name: 'Entrada de Ar',\n            },\n            {\n                opacity: 0.3,\n                name: 'DC1',\n            },\n            {\n                opacity: 0.3,\n                name: 'DC2',\n            },\n            {\n                opacity: 0.3,\n                name: 'DC3',\n            },\n        ],\n    },\n];\n\nexport default configStatesBar;\n","import React, { useState, useEffect } from 'react';\nimport MenuBar from '../../components/menuBar';\nimport Card from '../../components/card';\nimport StatesBar from '../../components/statesBar';\nimport { Container, DivCards } from './styles';\nimport ConfigStatesBar from '../../configs';\n\nfunction Monitor() {\n    const [resize, setResize] = useState(true);\n    const [data, setData] = useState({\n        vase: 0,\n        resistence: 0,\n        tension: 0,\n        pressure: 0,\n    });\n\n    window.onresize = (event) => {\n        setResize(!resize);\n    };\n\n    const handleDataA = (value) => {\n        setData(value);\n    };\n\n    useEffect(() => {\n        window.api.receive('A', handleDataA);\n    }, []);\n\n    useEffect(() => {\n        return () => window.api.stop('A');\n    }, []);\n\n    return (\n        <Container>\n            <MenuBar changeWindow={false} />\n            <DivCards>\n                <Card\n                    title=\"Resistência\"\n                    value={data.resistence}\n                    majorTicks={['0', '10', '20', '30', '40', '50', '60']}\n                    highlights={[\n                        { from: '0', to: '40', color: 'lightgreen' },\n                        { from: '40', to: '50', color: 'yellow' },\n                        { from: '50', to: '60', color: 'coral' },\n                    ]}\n                    minValue={0}\n                    maxValue={60}\n                    unit=\"ºC\"\n                    resize={resize}\n                />\n                <Card\n                    title=\"Vaso\"\n                    value={data.vase}\n                    majorTicks={['0', '10', '20', '30', '40', '50', '60']}\n                    highlights={[\n                        { from: '0', to: '40', color: 'lightgreen' },\n                        { from: '40', to: '50', color: 'yellow' },\n                        { from: '50', to: '60', color: 'coral' },\n                    ]}\n                    minValue={0}\n                    maxValue={60}\n                    unit=\"ºC\"\n                    resize={resize}\n                />\n                <Card\n                    title=\"Pressão\"\n                    value={data.pressure}\n                    majorTicks={['0', '10', '20', '30', '40', '50', '60']}\n                    highlights={[\n                        { from: '0', to: '40', color: 'lightgreen' },\n                        { from: '40', to: '50', color: 'yellow' },\n                        { from: '50', to: '60', color: 'coral' },\n                    ]}\n                    minValue={0}\n                    maxValue={60}\n                    unit=\"bar\"\n                    resize={resize}\n                />\n                <Card\n                    title=\"Tensão\"\n                    value={data.tension}\n                    majorTicks={['0', '1', '2', '3', '4', '5']}\n                    highlights={[\n                        { from: '0', to: '3', color: 'lightgreen' },\n                        { from: '3', to: '4', color: 'yellow' },\n                        { from: '4', to: '5', color: 'coral' },\n                    ]}\n                    minValue={0}\n                    maxValue={5}\n                    unit=\"V\"\n                    resize={resize}\n                />\n            </DivCards>\n            <StatesBar categories={ConfigStatesBar} />\n        </Container>\n    );\n}\n\nexport default Monitor;\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100%;\n    width: 99%;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: flex-start;\n    align-items: flex-start;\n    background-color: #fafafa;\n    overflow-x: scroll;\n`;\n\nconst Canvas = styled.canvas`\n    background-color: #fafafa;\n`;\n\n\nexport {Container, Canvas};","import React, { useRef, useEffect } from 'react';\nimport Chart from 'chart.js';\nimport * as Zoom from 'chartjs-plugin-zoom';\nimport { Container, Canvas } from './styles';\n\nfunction Graphic(props) {\n    const refCanvas = useRef(null);\n\n    useEffect(() => {\n        refCanvas.current = new Chart(refCanvas.current.getContext('2d'), {\n            type: 'line',\n            data: {\n                labels: [0],\n                datasets: props.datasets,\n            },\n            options: {\n                title: {\n                    display: false,\n                    text: props.title,\n                    fontSize: 2,\n                    fontColor: 'gray',\n                },\n                plugins: {\n                    zoom: {\n                        zoom: {\n                            enabled: true,\n                            mode: 'y',\n                            drag: {\n                                borderColor: 'rgba(225,225,225,0.3)',\n                                borderWidth: 5,\n                                backgroundColor: 'rgb(225,225,225)',\n                                animationDuration: 0,\n                            },\n                            rangeMin: {\n                                x: 0,\n                                y: 0,\n                            },\n                            rangeMax: {\n                                x: 0,\n                                y: 50,\n                            },\n                        },\n                        pan: {\n                            enabled: true,\n                            mode: 'y',\n                            rangeMin: {\n                                x: 0,\n                                y: 0,\n                            },\n                            rangeMax: {\n                                x: 0,\n                                y: 50,\n                            },\n                        },\n                    },\n                },\n                animation: {\n                    duration: 0,\n                },\n                elements: {\n                    line: {\n                        tension: 0,\n                    },\n                    point: {\n                        radius: 0,\n                    },\n                },\n                responsiveAnimationDuration: 0,\n                maintainAspectRatio: false,\n                responsive: true,\n                legend: {\n                    display: false,\n                },\n                tooltips: {\n                    enabled: false,\n                },\n                scales: {\n                    yAxes: [\n                        {\n                            ticks: {\n                                max: 40,\n                                min: 0,\n                            },\n                            gridLines: {\n                                display: true,\n                                color: 'gray',\n                            },\n                        },\n                    ],\n                    xAxes: [\n                        {\n                            gridLines: {\n                                display: true,\n                                color: 'gray',\n                            },\n                        },\n                    ],\n                },\n            },\n        });\n    }, []);\n\n    useEffect(() => {\n        refCanvas.current.chart.data.labels.push(\n            refCanvas.current.chart.data.labels.length + 1,\n        );\n        refCanvas.current.chart.data.datasets.forEach((dataset) => {\n            if (dataset.label === 'Resistência(ºC)') {\n                dataset.data.push(props.data.resistence);\n            } else if (dataset.label === 'Vaso(ºC)') {\n                dataset.data.push(props.data.vase);\n            } else if (dataset.label === 'Pressão(bar)') {\n                dataset.data.push(props.data.pressure);\n            } else {\n                dataset.data.push(props.data.tension);\n            }\n        });\n        if (refCanvas.current.chart.data.labels.length % 20 === 0) {\n            const size =\n                parseInt(\n                    refCanvas.current.canvas.style.width.split('px')[0],\n                    10,\n                ) + 100;\n            refCanvas.current.canvas.style.width = `${size}px`;\n            refCanvas.current.canvas.width += 20;\n            refCanvas.current.chart.width += 20;\n            document.getElementById('container').scrollLeft += 100;\n        }\n        refCanvas.current.chart.update(0);\n    }, [props.data]);\n\n    useEffect(() => {\n        refCanvas.current.chart.reset();\n        refCanvas.current.chart.data.labels = [0];\n        refCanvas.current.chart.data.datasets.forEach((dataset) => {\n            dataset.data = [0];\n        });\n        refCanvas.current.chart.update(0);\n    }, [props.clean]);\n\n    const handleOnClick = (event) => {\n        console.log(refCanvas.current.chart.options.scales.yAxes[0].ticks);\n        refCanvas.current.chart.options.scales.yAxes[0].ticks.min += 5;\n        refCanvas.current.chart.options.scales.yAxes[0].ticks.max -= 5;\n        refCanvas.current.chart.update(0);\n    };\n\n    return (\n        <>\n            <button onClick={(e) => handleOnClick(e)}> teste </button>\n            <Container id=\"container\">\n                <Canvas ref={refCanvas} />\n            </Container>\n        </>\n    );\n}\n\nexport default Graphic;\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    flex-flow: column wrap;\n    justify-content: flex-start;\n    align-content: flex-start;\n    background-color: #fafafa;\n`;\n\nconst DivTest = styled.div`\n    height: 100%;\n    width: calc(100% - 120px);\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: flex-start;\n    align-items: flex-start;\n    background-color: inherit;\n`;\n\nconst Header = styled.div`\n    height: 10%;\n    width: 100%;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #214f62;\n`;\n\nconst Title = styled.label`\n    align-self: auto;\n    margin-left: 3%;\n    font-size: 200%;\n    color: white;\n    background-color: inherit;\n`;\n\nconst Button = styled.button`\n    align-self: auto;\n    height: 70%;\n    color: white;\n    margin: 2px;\n    padding: 2px;\n    border: 2px solid white;\n    background-color: inherit;\n    border-radius: 20%;\n    cursor: pointer;\n    &:hover{\n        background-color: white;\n        color: black;\n    };\n`;\n\nconst ButtonBar = styled.div`\n    height: 80%;\n    align-self: auto;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-around;\n    align-items: center;\n    background-color: inherit;\n`;\n\nconst Main = styled.div`\n    height: 90%;\n    width: 100%;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: center;\n    align-items: flex-start;\n    background-color: inherit;\n`;\n\nconst DivGraph = styled.div`\n    height: 82%;\n    width: 100%;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n    align-items: center;\n    background-color: inherit;\n`;\n\nconst DivResult = styled.div`\n    height: 18%;\n    width: 100%;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n    align-items: center;\n    border-top: 1px solid black;\n    background-color: lightgray;\n`;\n\nconst TextArea = styled.textarea`\n    height: 100%;\n    width: 100%;\n    background-color: inherit;\n    color: black;\n    font-size: 15px;\n    overflow-y: scroll;\n    resize: none;\n`;\n\nexport {Container, Button, ButtonBar, Title, DivGraph,  DivTest, TextArea, Main, Header, DivResult};","import React, { useState } from 'react';\nimport MenuBar from '../../components/menuBar';\nimport Graphic from '../../components/graphic';\n\nimport {\n    Container,\n    ButtonBar,\n    Title,\n    Button,\n    Header,\n    TextArea,\n    DivTest,\n    Main,\n    DivResult,\n    DivGraph,\n} from './styles';\n\nlet dataToCsv = [\n    [\n        'tensão',\n        'Temperatura da resistência',\n        'temperatura do vaso',\n        'pressão',\n        'tempo de pressurização',\n        'tempo de esterilização',\n        'tempo de despressurização',\n        'tempo de secagem',\n        'tempo de resfriamento',\n        'tempo total',\n    ],\n];\n\nlet result = false;\n\nfunction Teste1() {\n    const [data, setData] = useState({\n        resistence: 0,\n        vase: 0,\n        pressure: 0,\n        tension: 0,\n    });\n\n    const [statusButton, setStatusButton] = useState({\n        start: false,\n        stop: true,\n        clean: true,\n    });\n    const [textAreaValue, setTextAreaValue] = useState('Aguardando...');\n    const [isRunning, setIsRunning] = useState(false);\n    const [clean, setClean] = useState(false);\n\n    const handleDataA = (data) => {\n        const temp = {\n            resistence: data.resistence,\n            vase: data.vase,\n            pressure: data.pressure,\n            tension: data.tension,\n        };\n        dataToCsv.push([\n            temp.tension,\n            temp.resistence,\n            temp.vase,\n            temp.pressure,\n        ]);\n        setData(temp);\n    };\n\n    function handleDataB(data) {\n        if (data) {\n            dataToCsv[1].push(data.presurization);\n            dataToCsv[1].push(data.sterilization);\n            dataToCsv[1].push(data.depresurization);\n            dataToCsv[1].push(data.drying);\n            dataToCsv[1].push(data.coulding);\n            dataToCsv[1].push(data.total);\n            result = true;\n        }\n        handleStop();\n    }\n\n    const handleDataC = (data) => {\n        setTextAreaValue('finalizando teste...');\n        if (data) {\n            setTextAreaValue(\n                textAreaValue.concat('\\narquivo salvo.\\nteste finalizado.'),\n            );\n        } else {\n            setTextAreaValue(\n                textAreaValue.concat(\n                    '\\narquivo não foi salvo.\\nteste finalizado.',\n                ),\n            );\n        }\n        if (result) {\n            setTextAreaValue(\n                textAreaValue.concat(\n                    `\\nResultado.\\ntempo de pressurização: ${dataToCsv[1][4]}\\ntempo de esterilização: ${dataToCsv[1][5]}\\ntempo de despressurização: ${dataToCsv[1][6]}\\ntempo de secagem: ${dataToCsv[1][7]}\\ntempo de resfriamento: ${dataToCsv[1][8]}\\ntempo total: ${dataToCsv[1][9]}\\n`,\n                ),\n            );\n        }\n        window.api.stop('C');\n    };\n\n    const handleStart = (event) => {\n        event.preventDefault();\n        window.api.receive('A', handleDataA);\n        window.api.receive('B', handleDataB);\n        window.api.receive('C', handleDataC);\n        setIsRunning(true);\n        setStatusButton({\n            start: true,\n            stop: false,\n            clean: true,\n        });\n        setTextAreaValue(\n            textAreaValue.concat('\\nIniciando...\\nrealizando testes...'),\n        );\n    };\n\n    const handleClean = (event) => {\n        event.preventDefault();\n        setClean(true);\n        setTimeout(() => {\n            setClean(false);\n        }, 100);\n        dataToCsv = [dataToCsv[0]];\n        result = false;\n        setStatusButton({\n            start: false,\n            stop: true,\n            clean: true,\n        });\n        setTextAreaValue('Aguardando...');\n    };\n\n    const handleStop = (event) => {\n        if (event) {\n            event.preventDefault();\n        }\n        setIsRunning(false);\n        setStatusButton({\n            start: true,\n            stop: true,\n            clean: false,\n        });\n        window.api.stop('A');\n        window.api.stop('B');\n        window.api.send('saveCSV', dataToCsv);\n    };\n\n    return (\n        <Container>\n            <MenuBar changeWindow={isRunning} />\n            <DivTest>\n                <Header>\n                    <Title> Teste</Title>\n                    <ButtonBar>\n                        <Button\n                            disabled={statusButton.start}\n                            onClick={(e) => handleStart(e)}\n                        >\n                            {' '}\n                            Iniciar{' '}\n                        </Button>\n                        <Button\n                            disabled={statusButton.stop}\n                            onClick={(e) => handleStop(e)}\n                        >\n                            {' '}\n                            Parar{' '}\n                        </Button>\n                        <Button\n                            disabled={statusButton.clean}\n                            onClick={(e) => handleClean(e)}\n                        >\n                            {' '}\n                            Limpar{' '}\n                        </Button>\n                    </ButtonBar>\n                </Header>\n                <Main>\n                    <DivGraph>\n                        <Graphic\n                            datasets={[\n                                {\n                                    label: 'Resistência(ºC)',\n                                    borderColor: 'blue',\n                                    fill: false,\n                                    showLine: true,\n                                },\n                                {\n                                    label: 'Vaso(ºC)',\n                                    borderColor: 'green',\n                                    fill: false,\n                                    showLine: true,\n                                },\n                                {\n                                    label: 'Pressão(bar)',\n                                    borderColor: 'orange',\n                                    fill: false,\n                                    showLine: true,\n                                },\n                                {\n                                    label: 'Voltagem(V)',\n                                    borderColor: 'red',\n                                    fill: false,\n                                    showLine: true,\n                                },\n                            ]}\n                            data={data}\n                            clean={clean}\n                        />\n                    </DivGraph>\n                    <DivResult>\n                        <TextArea disabled value={textAreaValue} />\n                    </DivResult>\n                </Main>\n            </DivTest>\n        </Container>\n    );\n}\n\nexport default Teste1;\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100%;\n    width: 99%;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: center;\n    align-items: center;\n    background-color: #fafafa;\n`;\n\nconst Canvas = styled.canvas`\n    background-color: #fafafa;\n`;\n\n\nexport {Container, Canvas};","import React, { useRef, useEffect } from 'react';\nimport Chart from 'chart.js';\n\nimport { Container, Canvas } from './styles';\n\nfunction GraphicCompare(props) {\n    const refCanvas = useRef(null);\n\n    useEffect(() => {\n        refCanvas.current = new Chart(refCanvas.current.getContext('2d'), {\n            type: 'line',\n            data: {\n                labels: [0],\n                datasets: [\n                    {\n                        label: props.labels[0],\n                        borderColor: 'red',\n                        fill: false,\n                        data: [0],\n                    },\n                    {\n                        label: props.labels[1],\n                        borderColor: 'blue',\n                        fill: false,\n                        data: [0],\n                    },\n                ],\n            },\n            options: {\n                title: {\n                    display: true,\n                    text: props.title,\n                    fontSize: 30,\n                    fontColor: '#214f62',\n                },\n                animation: {\n                    duration: 0,\n                },\n                elements: {\n                    line: {\n                        tension: 0,\n                    },\n                    point: {\n                        radius: 0,\n                    },\n                },\n                responsiveAnimationDuration: 0,\n                responsive: true,\n                scales: {\n                    yAxes: [\n                        {\n                            gridLines: {\n                                display: true,\n                                color: 'gray',\n                            },\n                        },\n                    ],\n                    xAxes: [\n                        {\n                            gridLines: {\n                                display: true,\n                                color: 'gray',\n                            },\n                            scaleLabel: {\n                                display: true,\n                                labelString: 'Nº de Leituras',\n                                fontSize: 18,\n                                color: 'black',\n                            },\n                        },\n                    ],\n                },\n            },\n        });\n    }, []);\n\n    useEffect(() => {\n        if (props.value) {\n            refCanvas.current.chart.reset();\n            refCanvas.current.chart.data.labels = [0];\n            if (props.value[0].length > props.value[1].length) {\n                for (let i = 1; i < props.value[0].length; i += 1) {\n                    refCanvas.current.chart.data.labels.push(i);\n                }\n            } else {\n                for (let i = 1; i < props.value[1].length; i += 1) {\n                    refCanvas.current.chart.data.labels.push(i);\n                }\n            }\n            refCanvas.current.chart.data.datasets[0].data = props.value[0];\n            refCanvas.current.chart.data.datasets[1].data = props.value[1];\n            refCanvas.current.chart.data.datasets[0].label = props.labels[0];\n            refCanvas.current.chart.data.datasets[1].label = props.labels[1];\n        }\n        refCanvas.current.chart.update(0);\n    }, [props.value]);\n\n    useEffect(() => {\n        refCanvas.current.chart.options.title.text = props.title;\n        refCanvas.current.chart.update(0);\n    }, [props.title]);\n\n    useEffect(() => {\n        if (props.clean) {\n            refCanvas.current.chart.reset();\n            refCanvas.current.chart.data.labels = [0];\n            refCanvas.current.chart.data.datasets[0].data = [0];\n            refCanvas.current.chart.data.datasets[1].data = [0];\n            refCanvas.current.chart.data.datasets[0].label = 'dados 1';\n            refCanvas.current.chart.data.datasets[1].label = 'dados 2';\n            refCanvas.current.chart.update(0);\n        }\n    }, [props.clean]);\n\n    return (\n        <Container>\n            <canvas height=\"100%\" ref={refCanvas} />\n        </Container>\n    );\n}\n\nexport default GraphicCompare;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    flex-flow: column wrap;\n    justify-content: flex-start;\n    align-content: flex-start;\n    background-color: #fafafa;\n`;\n\nconst DivTest = styled.div`\n    height: 100%;\n    width: calc(100% - 120px);\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: center;\n    align-items: flex-start;\n    background-color: inherit;\n`;\n\nconst Header = styled.div`\n    height: 10%;\n    width: 100%;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #214f62;\n`;\n\nconst Title = styled.label`\n    align-self: auto;\n    margin-left: 3%;\n    font-size: 200%;\n    color: white;\n    background-color: inherit;\n`;\n\nconst Button = styled.button`\n    align-self: auto;\n    height: 70%;\n    color: white;\n    margin: 2px;\n    padding: 2px;\n    border: 2px solid white;\n    background-color: inherit;\n    border-radius: 20%;\n    cursor: pointer;\n    &:hover {\n        background-color: white;\n        color: black;\n    }\n`;\n\nconst ButtonBar = styled.div`\n    height: 80%;\n    align-self: auto;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-around;\n    align-items: center;\n    background-color: inherit;\n`;\n\nconst Main = styled.div`\n    height: 90%;\n    width: 100%;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: center;\n    align-items: flex-start;\n    background-color: inherit;\n`;\n\nconst DivGraph = styled.div`\n    height: 82%;\n    width: 100%;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n    align-items: center;\n    background-color: inherit;\n`;\n\nconst DivResult = styled.div`\n    height: 18%;\n    width: 100%;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n    align-items: center;\n    border-top: 1px solid black;\n    background-color: lightgray;\n`;\n\nconst TextArea = styled.textarea`\n    height: 100%;\n    width: 50%;\n    background-color: inherit;\n    color: black;\n    font-size: 15px;\n    overflow-y: scroll;\n    resize: none;\n`;\n\nconst Select = styled.select`\n    align-self: auto;\n    height: 70%;\n    color: white;\n    margin: 2px;\n    padding: 2px;\n    border: 2px solid white;\n    background-color: inherit;\n    border-radius: 20%;\n    cursor: pointer;\n    &:hover {\n        background-color: white;\n        color: black;\n    }\n`;\n\nexport {\n    Container,\n    Button,\n    ButtonBar,\n    Title,\n    DivGraph,\n    Select,\n    DivTest,\n    TextArea,\n    Main,\n    Header,\n    DivResult,\n};\n","import React, { useEffect, useState } from 'react';\nimport MenuBar from '../../components/menuBar';\nimport GraphicCompare from '../../components/graphicCompare';\n\nimport {\n    Container,\n    ButtonBar,\n    Title,\n    Button,\n    Header,\n    Select,\n    TextArea,\n    DivTest,\n    Main,\n    DivResult,\n    DivGraph,\n} from './styles';\n\nfunction Teste1() {\n    const [data1, setData1] = useState({\n        resistence: [0],\n        vase: [0],\n        pressure: [0],\n        tension: [0],\n        label: 'dados 1',\n    });\n\n    const [data2, setData2] = useState({\n        resistence: [0],\n        vase: [0],\n        pressure: [0],\n        tension: [0],\n        label: 'dados 2',\n    });\n\n    const [show, setShow] = useState([data1.resistence, data2.resistence]);\n    const [type, setType] = useState('Resistência(ºC)');\n    const [clean, setClean] = useState(false);\n    const [textArea1, setTextArea1] = useState('Aguardando dados...');\n    const [textArea2, setTextArea2] = useState('Aguardando dados...');\n\n    const handleLoad1 = (data) => {\n        setData1(data);\n        window.api.stop('dataCSV');\n    };\n\n    const handleLoad2 = (data) => {\n        setData2(data);\n        window.api.stop('dataCSV');\n    };\n\n    const handleStart1 = (event) => {\n        event.preventDefault();\n        window.api.send('loadCSV', true);\n        window.api.receive('dataCSV', handleLoad1);\n    };\n\n    const handleStart2 = (event) => {\n        event.preventDefault();\n        window.api.send('loadCSV', true);\n        window.api.receive('dataCSV', handleLoad2);\n    };\n\n    useEffect(() => {\n        if (type === 'Resistência(ºC)') {\n            setShow([data1.resistence, data2.resistence]);\n        } else if (type === 'Vaso(ºC)') {\n            setShow([data1.vase, data2.vase]);\n        } else if (type === 'Pressão') {\n            setShow([data1.pressure, data2.pressure]);\n        } else {\n            setShow([data1.tension, data2.tension]);\n        }\n        if (data1.avgRe) {\n            setTextArea1(\n                `${data1.label}\\nResistência -> máxima: ${data1.maxRe}ºC média: ${data1.avgRe}ºC\\n`\n                    .concat(\n                        `Vaso -> máxima: ${data1.maxVa}ºC média: ${data1.avgVa}ºC\\n`,\n                    )\n                    .concat(\n                        `Pressão -> máxima: ${data1.maxPe}bar média: ${data1.avgPe}bar\\n`,\n                    )\n                    .concat(\n                        `Tensão -> máxima: ${data1.maxTe}V média: ${data1.avgTe}V\\n`,\n                    )\n                    .concat(`Tempo de Pressurização: ${data1.tempPre}\\n`)\n                    .concat(`Tempo de Esterilização: ${data1.tempEst}\\n`)\n                    .concat(`Tempo de Despressurização: ${data1.tempDes}\\n`)\n                    .concat(`Tempo de Secagem: ${data1.tempSec}\\n`)\n                    .concat(`Tempo de Resfriamento: ${data1.tempRes}\\n`)\n                    .concat(`Total: ${data1.tempTot}`),\n            );\n        }\n        if (data2.avgRe) {\n            setTextArea2(\n                `${data2.label}\\nResistência -> máxima: ${data2.maxRe}ºC média: ${data2.avgRe}ºC\\n`\n                    .concat(\n                        `Vaso -> máxima: ${data2.maxVa}ºC média: ${data2.avgVa}ºC\\n`,\n                    )\n                    .concat(\n                        `Pressão -> máxima: ${data2.maxPe}bar média: ${data2.avgPe}bar\\n`,\n                    )\n                    .concat(\n                        `Tensão -> máxima: ${data2.maxTe}V média: ${data2.avgTe}V\\n`,\n                    )\n                    .concat(`Tempo de Pressurização: ${data2.tempPre}\\n`)\n                    .concat(`Tempo de Esterilização: ${data2.tempEst}\\n`)\n                    .concat(`Tempo de Despressurização: ${data2.tempDes}\\n`)\n                    .concat(`Tempo de Secagem: ${data2.tempSec}\\n`)\n                    .concat(`Tempo de Resfriamento: ${data2.tempRes}\\n`)\n                    .concat(`Total: ${data2.tempTot}`),\n            );\n        }\n    }, [type, data1, data2]);\n\n    const handleClean = (event) => {\n        event.preventDefault();\n        setClean(true);\n        setTimeout(() => {\n            setClean(false);\n        }, 100);\n        setTextArea1('Aguardando dados...');\n        setTextArea2('Aguardando dados...');\n    };\n\n    const handleChangeType = (event) => {\n        event.preventDefault();\n        setType(event.target.value);\n    };\n\n    return (\n        <Container>\n            <MenuBar changeWindow={false} />\n            <DivTest>\n                <Header>\n                    <Title> Comparar</Title>\n                    <ButtonBar>\n                        <Button onClick={(e) => handleStart1(e)}>\n                            {' '}\n                            Carregar dados1{' '}\n                        </Button>\n                        <Button onClick={(e) => handleStart2(e)}>\n                            {' '}\n                            Carregar dados2{' '}\n                        </Button>\n                        <Select\n                            value={type}\n                            onChange={(e) => handleChangeType(e)}\n                        >\n                            <option value=\"Resistência(ºC)\">\n                                {' '}\n                                resistência{' '}\n                            </option>\n                            <option value=\"Vaso(ºC)\"> vaso </option>\n                            <option value=\"Pressão(Libras)\"> pressão </option>\n                            <option value=\"Tensão(V)\"> tensão </option>\n                        </Select>\n                        <Button onClick={(e) => handleClean(e)}>\n                            {' '}\n                            Limpar{' '}\n                        </Button>\n                    </ButtonBar>\n                </Header>\n                <Main>\n                    <DivGraph>\n                        <GraphicCompare\n                            value={show}\n                            title={type}\n                            labels={[data1.label, data2.label]}\n                            clean={clean}\n                        />\n                    </DivGraph>\n                    <DivResult>\n                        <TextArea disabled value={textArea1} />\n                        <TextArea disabled value={textArea2} />\n                    </DivResult>\n                </Main>\n            </DivTest>\n        </Container>\n    );\n}\n\nexport default Teste1;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\n\nimport Login from \"./pages/login\";\nimport Monitor from \"./pages/monitor\";\nimport Teste1 from \"./pages/teste1\";\nimport Compare from \"./pages/compare\";\nimport \"./index.css\";\n\nwindow.onload = () => {\n  ReactDOM.render(\n    <HashRouter basename={\"/\"}>\n        <Switch>\n          <Route path=\"/\" component={Login} exact />\n          <Route path=\"/monitor\" component={Monitor} exact/>\n          <Route path=\"/teste1\" component={Teste1} exact/>\n          <Route path=\"/compare\" component={Compare} exact/>\n        </Switch>\n      </HashRouter>,\n      document.getElementById('root')\n  );\n}"],"sourceRoot":""}